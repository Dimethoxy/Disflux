name: Build Project

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Ninja on Windows
        if: matrix.os == 'windows-latest'
        run: |
           brew install ninja || true
        shell: zsh

      - name: Set Up Ninja on Mac
        if: matrix.os == 'macos-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build
        shell: zsh

        - name: Set Up Ninja on Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build
        shell: pwsh

      - name: Configure Build
        run: |
          mkdir build
          cd build
          cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Release ..
        shell: bash

      - name: Build
        run: cmake --build build
        shell: bash

      - name: Run Tests
        run: |
          cd build
          ctest
        shell: bash

      - name: Package Artifacts
        run: |
          mkdir -p artifacts
          cp -r build/* artifacts/
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts-${{ matrix.os }}-Release
          path: artifacts/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: prerelease-${{ github.run_number }}
          release_name: Pre-release ${{ github.run_number }}
          body: |
            Build artifacts for OS: ${{ matrix.os }} and Build Type: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: prerelease-${{ github.run_number }}
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
