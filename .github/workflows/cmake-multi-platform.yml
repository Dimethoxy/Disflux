#===========================================================================================
# This workflow will build the project for Windows, macOS, and Linux.
# It will also build an Arch Linux package and create a GitHub release.
#===========================================================================================

name: Build Project
on:
  workflow_dispatch:
  pull_request:
  push:
defaults:
  run:
    shell: bash

#===========================================================================================
# Build Jobs
#===========================================================================================
jobs:
  #=========================================================================================
  # Windows Build
  #=========================================================================================
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup MSVC
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64
          spectre: true

      - name: Set Up Windows
        run: choco install ninja

      - name: Select CMake Preset
        run: cmake --preset "Windows Release"

      - name: Build
        run: cmake --build build --config "Release"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-windows
          path: build/src/DisfluxPlugin_artefacts/Release

  #=========================================================================================
  # macOS Build
  #=========================================================================================
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Mac
        run: brew install ninja osxutils

      - name: Select CMake Preset
        run: cmake --preset "Mac Release" -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"

      - name: Build
        run: cmake --build build --config "Release"

      - name: Package macOS Artifacts
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p artifacts
          cp -r build/src/DisfluxPlugin_artefacts/Release/VST3 artifacts/
          cp -r build/src/DisfluxPlugin_artefacts/Release/CLAP artifacts/
          cp -r build/src/DisfluxPlugin_artefacts/Release/AU artifacts/
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-macos
          path: build/src/DisfluxPlugin_artefacts/Release

  #=========================================================================================
  # Ubuntu Linux Build
  #=========================================================================================
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Linux
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build
          sudo apt install libasound2-dev \
                           libjack-jackd2-dev \
                           ladspa-sdk \
                           libcurl4-openssl-dev  \
                           libfreetype-dev \
                           libfontconfig1-dev \
                           libx11-dev \
                           libxcomposite-dev \
                           libxcursor-dev \
                           libxext-dev \
                           libxinerama-dev \
                           libxrandr-dev \
                           libxrender-dev \
                           libwebkit2gtk-4.1-dev \
                           libglu1-mesa-dev mesa-common-dev
          sudo apt-get install -y dpkg-dev devscripts
          sudo /usr/bin/Xvfb $DISPLAY &
        shell: bash

      - name: Select CMake Preset
        run: cmake --preset "Linux Release"

      - name: Build
        run: cmake --build build --config "Release"

      - name: Package Linux Artifacts
        run: |
          # Define variables
          ARTIFACTS_DIR       = "artifacts"
          BUILD_DIR           = "build/src/DisfluxPlugin_artefacts/Release"
          DEBIAN_PACKAGE_DIR  = "disflux-snapshot-linux-ubuntu"
          DEBIAN_CONTROL_FILE = "pkg/ubuntu/control"
          CLAP_DIR            = "/usr/lib/clap/Disflux"
          LV2_DIR             = "/usr/lib/lv2/Disflux"
          VST3_DIR            = "/usr/lib/vst3/Disflux"

          # Prepare artifacts directory
          mkdir -p $ARTIFACTS_DIR

          # Prepare Debian package directory structure
          mkdir -p $DEBIAN_PACKAGE_DIR/DEBIAN
          mkdir -p $DEBIAN_PACKAGE_DIR/$CLAP_DIR
          mkdir -p $DEBIAN_PACKAGE_DIR/$LV2_DIR
          mkdir -p $DEBIAN_PACKAGE_DIR/$VST3_DIR

          # Copy files to Debian package directory
          cp -r $BUILD_DIR/CLAP/Disflux.clap \
                $DEBIAN_PACKAGE_DIR/$CLAP_DIR/
          cp -r $BUILD_DIR/LV2/Disflux.lv2 \
                $DEBIAN_PACKAGE_DIR/$LV2_DIR/
          cp -r $BUILD_DIR/VST3/Disflux.vst3 \
                $DEBIAN_PACKAGE_DIR/$VST3_DIR/

          # Copy vanilla files to artifacts directory
          cp -r $BUILD_DIR/LV2/Disflux.lv2 \
                $ARTIFACTS_DIR/
          cp -r $BUILD_DIR/CLAP/Disflux.clap \
                $ARTIFACTS_DIR/
          cp -r $BUILD_DIR/VST3/Disflux.vst3 \
                $ARTIFACTS_DIR/

          # Copy control file to Debian package directory
          cp $DEBIAN_CONTROL_FILE $DEBIAN_PACKAGE_DIR/DEBIAN

          # Build Debian package
          dpkg-deb --build $DEBIAN_PACKAGE_DIR

          # Move Debian package to artifacts
          cp -r $DEBIAN_PACKAGE_DIR.deb $ARTIFACTS_DIR/
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-ubuntu
          path: artifacts

  #=========================================================================================
  # Fedora Linux Build
  #=========================================================================================
  build-fedora:
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
    steps:
      - name: Install Dependencies
        run: |
          dnf install -y rpmdevtools rpmlint
          dnf install -y git cmake gcc gcc-c++ ninja-build
          dnf install -y alsa-lib-devel \
                         jack-audio-connection-kit-devel \
                         ladspa-devel \
                         libcurl-devel \
                         freetype-devel \
                         fontconfig-devel \
                         libX11-devel \
                         libXcomposite-devel \
                         libXcursor-devel \
                         libXext-devel \
                         libXinerama-devel \
                         libXrandr-devel \
                         libXrender-devel \
                         webkit2gtk3-devel \
                         mesa-libGLU-devel mesa-libGL-devel
        shell: bash

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Select CMake Preset
        run: cmake --preset "Linx Release"

      - name: Build
        run: cmake --build build --config "Release"

      - name: Package Fedora Artifacts
        run: |
          ls -la

  #=========================================================================================
  # Arch Linux Build
  #=========================================================================================
  build-archlinux:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Install Base Packages
        run: |
          pacman -Sy --noconfirm base-devel git

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create user for build process
        run: |
          useradd -m dimethoxy
          sudo su - dimethoxy

      - name: Set permissions for the build directory
        run: |
          sudo chown -R dimethoxy:dimethoxy /__w/Disflux/Disflux/pkg/arch/git
          sudo chmod -R u+rw /__w/Disflux/Disflux/pkg/arch/git

      - name: Disable sudo password prompt
        run: |
          echo 'dimethoxy ALL=(ALL) NOPASSWD: ALL' | sudo tee -a /etc/sudoers

      - name: Build Package
        run: |
          sudo -u dimethoxy bash -c 'cd pkg/arch/git && makepkg -s --noconfirm'

      - name: Package Artifacts
        run: |
          # Remove the default package
          rm pkg/arch/git/*debug*.pkg.tar.zst

          # Move the package to the root directory
          mv pkg/arch/git/*.pkg.tar.zst .

          # Rename the package
          mv *.pkg.tar.zst disflux-snapshot-linux-arch.pkg.tar.zst

          # Move the package to the artifacts directory
          mkdir -p artifactsg.tar.zst artifacts/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-archlinux
          path: artifacts/disflux-snapshot-linux-arch.pkg.tar.zst

  #=========================================================================================
  # Release the project
  #=========================================================================================
  release:
    runs-on: ubuntu-latest
    needs:
      [build-windows, build-macos, build-ubuntu, build-fedora, build-archlinux]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Get Artifacts
        uses: actions/download-artifact@v4

      - name: Package Artifacts
        run: |
          # Move the deb package to the root directory
          mv build-artifacts-archlinux/disflux-snapshot-linux-arch.pkg.tar.zst .
          mv build-artifacts-ubuntu/disflux-snapshot-linux-ubuntu.deb .

          # Zip the artifacts
          zip -r disflux-snapshot-linux.zip ./build-artifacts-linux-vanilla-latest
          zip -r disflux-snapshot-macos.zip ./build-artifacts-macos-latest
          zip -r disflux-snapshot-windows.zip ./build-artifacts-windows-latest

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "Snapshot"
          prerelease: true
          body: |
            ### ⚠️ WARNING: Unstable Release ⚠️
            This is a **unstable** snapshot intended solely for testing purposes.
            It may contain bugs, incomplete features, or cause instability.
            **Not recommended** for production or general use—proceed with caution.

      - name: Upload .zip Packages to GitHub Release
        run: |
          gh release upload "Snapshot" disflux-snapshot-archlinux.pkg.tar.zst --clobber
          gh release upload "Snapshot" disflux-snapshot-linux.zip --clobber
          gh release upload "Snapshot" disflux-snapshot-macos.zip --clobber
          gh release upload "Snapshot" disflux-snapshot-ubuntu.deb --clobber
          gh release upload "Snapshot" disflux-snapshot-windows.zip --clobber

      - name: Update the Source Code in the Release
        run: |
          gh release upload "Snapshot" src.zip --clobber
          gh release upload "Snapshot" src.tar.gz --clobber
